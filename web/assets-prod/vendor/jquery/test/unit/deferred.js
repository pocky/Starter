module("deferred",{teardown:moduleTeardown}),jQuery.each([""," - new operator"],function(e,t){function n(e){return t?new jQuery.Deferred(e):jQuery.Deferred(e)}test("jQuery.Deferred"+t,function(){expect(23);var e=n();strictEqual(e.pipe,e.then,"pipe is an alias of then"),n().resolve().done(function(){ok(!0,"Success on resolve"),strictEqual(this.state(),"resolved","Deferred is resolved (state)")}).fail(function(){ok(!1,"Error on resolve")}).always(function(){ok(!0,"Always callback on resolve")}),n().reject().done(function(){ok(!1,"Success on reject")}).fail(function(){ok(!0,"Error on reject"),strictEqual(this.state(),"rejected","Deferred is rejected (state)")}).always(function(){ok(!0,"Always callback on reject")}),n(function(e){ok(this===e,"Defer passed as this & first argument"),this.resolve("done")}).done(function(e){strictEqual(e,"done","Passed function executed")}),n(function(e){var t=e.promise(),n=function(){},r=e.promise(n);strictEqual(e.promise(),t,"promise is always the same"),strictEqual(r,n,"non objects get extended"),jQuery.each(t,function(e){jQuery.isFunction(t[e])||ok(!1,e+" is a function ("+jQuery.type(t[e])+")"),t[e]!==n[e]&&strictEqual(n[e],t[e],e+" is the same")})}),jQuery.expandedEach=jQuery.each,jQuery.expandedEach("resolve reject".split(" "),function(e,t){n(function(e){strictEqual(e.state(),"pending","pending after creation");var n=0;e.progress(function(e){strictEqual(e,n,"Progress: right value ("+e+") received")});for(n=0;n<3;n++)e.notify(n);strictEqual(e.state(),"pending","pending after notification"),e[t](),notStrictEqual(e.state(),"pending","not pending after "+t),e.notify()})})})}),test("jQuery.Deferred - chainability",function(){var e=jQuery.Deferred();expect(10),jQuery.expandedEach=jQuery.each,jQuery.expandedEach("resolve reject notify resolveWith rejectWith notifyWith done fail progress always".split(" "),function(t,n){var r={m:e[n]};strictEqual(r.m(),r,n+" is chainable")})}),test("jQuery.Deferred.then - filtering (done)",function(){expect(4);var e,t,n,r=jQuery.Deferred(),i=r.then(function(e,t){return e*t});i.done(function(e){n=e}),r.done(function(n,r){e=n,t=r}),r.resolve(2,3),strictEqual(e,2,"first resolve value ok"),strictEqual(t,3,"second resolve value ok"),strictEqual(n,6,"result of filter ok"),jQuery.Deferred().reject().then(function(){ok(!1,"then should not be called on reject")}),jQuery.Deferred().resolve().then(jQuery.noop).done(function(e){strictEqual(e,undefined,"then done callback can return undefined/null")})}),test("jQuery.Deferred.then - filtering (fail)",function(){expect(4);var e,t,n,r=jQuery.Deferred(),i=r.then(null,function(e,t){return e*t});i.fail(function(e){n=e}),r.fail(function(n,r){e=n,t=r}),r.reject(2,3),strictEqual(e,2,"first reject value ok"),strictEqual(t,3,"second reject value ok"),strictEqual(n,6,"result of filter ok"),jQuery.Deferred().resolve().then(null,function(){ok(!1,"then should not be called on resolve")}),jQuery.Deferred().reject().then(null,jQuery.noop).fail(function(e){strictEqual(e,undefined,"then fail callback can return undefined/null")})}),test("jQuery.Deferred.then - filtering (progress)",function(){expect(3);var e,t,n,r=jQuery.Deferred(),i=r.then(null,null,function(e,t){return e*t});i.progress(function(e){n=e}),r.progress(function(n,r){e=n,t=r}),r.notify(2,3),strictEqual(e,2,"first progress value ok"),strictEqual(t,3,"second progress value ok"),strictEqual(n,6,"result of filter ok")}),test("jQuery.Deferred.then - deferred (done)",function(){expect(3);var e,t,n,r=jQuery.Deferred(),i=r.then(function(e,t){return jQuery.Deferred(function(n){n.reject(e*t)})});i.fail(function(e){n=e}),r.done(function(n,r){e=n,t=r}),r.resolve(2,3),strictEqual(e,2,"first resolve value ok"),strictEqual(t,3,"second resolve value ok"),strictEqual(n,6,"result of filter ok")}),test("jQuery.Deferred.then - deferred (fail)",function(){expect(3);var e,t,n,r=jQuery.Deferred(),i=r.then(null,function(e,t){return jQuery.Deferred(function(n){n.resolve(e*t)})});i.done(function(e){n=e}),r.fail(function(n,r){e=n,t=r}),r.reject(2,3),strictEqual(e,2,"first reject value ok"),strictEqual(t,3,"second reject value ok"),strictEqual(n,6,"result of filter ok")}),test("jQuery.Deferred.then - deferred (progress)",function(){expect(3);var e,t,n,r=jQuery.Deferred(),i=r.then(null,null,function(e,t){return jQuery.Deferred(function(n){n.resolve(e*t)})});i.done(function(e){n=e}),r.progress(function(n,r){e=n,t=r}),r.notify(2,3),strictEqual(e,2,"first progress value ok"),strictEqual(t,3,"second progress value ok"),strictEqual(n,6,"result of filter ok")}),test("jQuery.Deferred.then - context",function(){expect(7);var e,t,n,r,i={};jQuery.Deferred().resolveWith(i,[2]).then(function(e){return e*3}).done(function(e){strictEqual(this,i,"custom context correctly propagated"),strictEqual(e,6,"proper value received")}),jQuery.Deferred().resolve().then(function(){return jQuery.Deferred().resolveWith(i)}).done(function(){strictEqual(this,i,"custom context of returned deferred correctly propagated")}),e=jQuery.Deferred(),t=e.then(function(e){return e*3}),e.resolve(2),t.done(function(e){strictEqual(this,t,"default context gets updated to latest promise in the chain"),strictEqual(e,6,"proper value received")}),n=jQuery.Deferred(),r=n.then(),n.resolve(2),r.done(function(e){strictEqual(this,r,"default context gets updated to latest promise in the chain (without passing function)"),strictEqual(e,2,"proper value received (without passing function)")})}),test("jQuery.when",function(){expect(34),jQuery.each({"an empty string":"","a non-empty string":"some string",zero:0,"a number other than zero":1,"true":!0,"false":!1,"null":null,"undefined":undefined,"a plain object":{}},function(e,t){ok(jQuery.isFunction(jQuery.when(t).done(function(n){strictEqual(this,window,"Context is the global object with "+e),strictEqual(n,t,"Test the promise was resolved with "+e)}).promise),"Test "+e+" triggers the creation of a new Promise")}),ok(jQuery.isFunction(jQuery.when().done(function(e){strictEqual(this,window,"Test the promise was resolved with window as its context"),strictEqual(e,undefined,"Test the promise was resolved with no parameter")}).promise),"Test calling when with no parameter triggers the creation of a new Promise");var e,t={};jQuery.when(jQuery.Deferred().resolveWith(t)).done(function(){strictEqual(this,t,"when( promise ) propagates context")}),jQuery.each([1,2,3],function(t,n){jQuery.when(e||jQuery.Deferred(function(){this.resolve(n)})).done(function(t){strictEqual(t,1,"Function executed"+(n>1?" only once":"")),e=t})})}),test("jQuery.when - joined",function(){expect(119);var e={value:1,success:jQuery.Deferred().resolve(1),error:jQuery.Deferred().reject(0),futureSuccess:jQuery.Deferred().notify(!0),futureError:jQuery.Deferred().notify(!0),notify:jQuery.Deferred().notify(!0)},t={value:!0,success:!0,futureSuccess:!0},n={error:!0,futureError:!0},r={futureSuccess:!0,futureError:!0,notify:!0};jQuery.each(e,function(i,s){jQuery.each(e,function(e,o){var u=t[i]&&t[e],a=n[i]||n[e],f=r[i]||r[e],l=u?[1,1]:[0,undefined],c=f&&[r[i],r[e]],h=i+"/"+e,p=s&&jQuery.isFunction(s.promise)?s.promise():undefined,d=o&&jQuery.isFunction(o.promise)?o.promise():undefined;jQuery.when(s,o).done(function(e,t){u?(deepEqual([e,t],l,h+" => resolve"),strictEqual(this[0],p,h+" => first context OK"),strictEqual(this[1],d,h+" => second context OK")):ok(!1,h+" => resolve")}).fail(function(e,t){a?deepEqual([e,t],l,h+" => reject"):ok(!1,h+" => reject")}).progress(function(e,t){deepEqual([e,t],c,h+" => progress"),strictEqual(this[0],c[0]?p:undefined,h+" => first context OK"),strictEqual(this[1],c[1]?d:undefined,h+" => second context OK")})})}),e.futureSuccess.resolve(1),e.futureError.reject(0)});